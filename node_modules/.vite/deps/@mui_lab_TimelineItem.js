import {
  timelineContentClasses_default
} from "./chunk-QKVO3CDI.js";
import {
  timelineOppositeContentClasses_default
} from "./chunk-5B4SJDJO.js";
import {
  TimelineContext_default
} from "./chunk-F4XVO4ZM.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  composeClasses
} from "./chunk-DMZLNTDG.js";
import "./chunk-DM4MHTN5.js";
import "./chunk-ZRDC2YP4.js";
import "./chunk-2Z622564.js";
import "./chunk-AOKQVTWL.js";
import "./chunk-35DPJHKY.js";
import {
  init_utils
} from "./chunk-XVFFLT36.js";
import "./chunk-VCU27G7U.js";
import "./chunk-XU7WKKXF.js";
import "./chunk-GA5DVJ3K.js";
import {
  isMuiElement_default
} from "./chunk-226PX7Y7.js";
import "./chunk-TS43NHU4.js";
import "./chunk-EOJHLD6E.js";
import {
  capitalize_default
} from "./chunk-UFLUHEKO.js";
import "./chunk-K6SK5FRK.js";
import "./chunk-4WMUBC7G.js";
import "./chunk-ETFCLEH4.js";
import "./chunk-FO6ANKMH.js";
import "./chunk-U7J4ISLF.js";
import {
  init_generateUtilityClass,
  styled_default,
  useThemeProps
} from "./chunk-LA7O6DV2.js";
import {
  clsx_m_default,
  generateUtilityClass,
  generateUtilityClasses,
  init_clsx_m
} from "./chunk-ORXJS6FR.js";
import {
  require_prop_types
} from "./chunk-AH2VWMAE.js";
import "./chunk-YJ7NUPPB.js";
import "./chunk-LAFD7PBU.js";
import {
  require_jsx_runtime
} from "./chunk-VTEM4G2C.js";
import {
  require_react
} from "./chunk-6IFW32P2.js";
import {
  __toESM
} from "./chunk-TFWDKVI3.js";

// node_modules/@mui/lab/TimelineItem/TimelineItem.js
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
init_clsx_m();
init_utils();

// node_modules/@mui/lab/TimelineItem/timelineItemClasses.js
init_generateUtilityClass();
function getTimelineItemUtilityClass(slot) {
  return generateUtilityClass("MuiTimelineItem", slot);
}
var timelineItemClasses = generateUtilityClasses("MuiTimelineItem", ["root", "positionLeft", "positionRight", "positionAlternate", "missingOppositeContent"]);
var timelineItemClasses_default = timelineItemClasses;

// node_modules/@mui/lab/TimelineItem/TimelineItem.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["position", "className"];
var useUtilityClasses = (ownerState) => {
  const {
    position,
    classes,
    hasOppositeContent
  } = ownerState;
  const slots = {
    root: ["root", `position${capitalize_default(position)}`, !hasOppositeContent && "missingOppositeContent"]
  };
  return composeClasses(slots, getTimelineItemUtilityClass, classes);
};
var TimelineItemRoot = styled_default("li", {
  name: "MuiTimelineItem",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, styles[`position${capitalize_default(ownerState.position)}`]];
  }
})(({
  ownerState
}) => _extends({
  listStyle: "none",
  display: "flex",
  position: "relative",
  minHeight: 70
}, ownerState.position === "left" && {
  flexDirection: "row-reverse"
}, ownerState.position === "alternate" && {
  "&:nth-of-type(even)": {
    flexDirection: "row-reverse",
    [`& .${timelineContentClasses_default.root}`]: {
      textAlign: "right"
    },
    [`& .${timelineOppositeContentClasses_default.root}`]: {
      textAlign: "left"
    }
  }
}, !ownerState.hasOppositeContent && {
  "&:before": {
    content: '""',
    flex: 1,
    padding: "6px 16px"
  }
}));
var TimelineItem = React.forwardRef(function TimelineItem2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiTimelineItem"
  });
  const {
    position: positionProp,
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const {
    position: positionContext
  } = React.useContext(TimelineContext_default);
  let hasOppositeContent = false;
  React.Children.forEach(props.children, (child) => {
    if (isMuiElement_default(child, ["TimelineOppositeContent"])) {
      hasOppositeContent = true;
    }
  });
  const ownerState = _extends({}, props, {
    position: positionProp || positionContext || "right",
    hasOppositeContent
  });
  const classes = useUtilityClasses(ownerState);
  const contextValue = React.useMemo(() => ({
    position: ownerState.position
  }), [ownerState.position]);
  return (0, import_jsx_runtime.jsx)(TimelineContext_default.Provider, {
    value: contextValue,
    children: (0, import_jsx_runtime.jsx)(TimelineItemRoot, _extends({
      className: clsx_m_default(classes.root, className),
      ownerState,
      ref
    }, other))
  });
});
true ? TimelineItem.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types.default.object,
  /**
   * @ignore
   */
  className: import_prop_types.default.string,
  /**
   * The position where the timeline's item should appear.
   */
  position: import_prop_types.default.oneOf(["left", "right"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object])
} : void 0;
var TimelineItem_default = TimelineItem;
export {
  TimelineItem_default as default,
  getTimelineItemUtilityClass,
  timelineItemClasses_default as timelineItemClasses
};
//# sourceMappingURL=@mui_lab_TimelineItem.js.map
